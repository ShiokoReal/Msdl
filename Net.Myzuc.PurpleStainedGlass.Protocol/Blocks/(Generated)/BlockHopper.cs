namespace Net.Myzuc.PurpleStainedGlass.Protocol.Blocks
{
    public sealed class BlockHopper : Block
    {
        public enum EnumFacing : int
        {
            Down = 0,
            North = 1,
            South = 2,
            West = 3,
            East = 4
        }
        private static (double xa, double ya, double za, double xb, double yb, double zb)[][] InternalCollisions = [
            [
                (0.375, 0, 0.375, 0.625, 0.6875, 0.625),
                (0.25, 0.25, 0.25, 0.375, 0.6875, 0.75),
                (0.375, 0.25, 0.25, 0.75, 0.6875, 0.375),
                (0.375, 0.25, 0.625, 0.75, 0.6875, 0.75),
                (0.625, 0.25, 0.375, 0.75, 0.6875, 0.625),
                (0, 0.625, 0, 0.25, 0.6875, 1),
                (0.25, 0.625, 0, 1, 0.6875, 0.25),
                (0.25, 0.625, 0.75, 1, 0.6875, 1),
                (0.75, 0.625, 0.25, 1, 0.6875, 0.75),
                (0, 0.6875, 0, 0.125, 1, 1),
                (0.125, 0.6875, 0, 1, 1, 0.125),
                (0.125, 0.6875, 0.875, 1, 1, 1),
                (0.875, 0.6875, 0.125, 1, 1, 0.875)
            ],
            [
                (0.25, 0.25, 0.25, 0.75, 0.6875, 0.75),
                (0.375, 0.25, 0, 0.625, 0.5, 0.25),
                (0, 0.625, 0, 0.25, 0.6875, 1),
                (0.25, 0.625, 0, 1, 0.6875, 0.25),
                (0.25, 0.625, 0.75, 1, 0.6875, 1),
                (0.75, 0.625, 0.25, 1, 0.6875, 0.75),
                (0, 0.6875, 0, 0.125, 1, 1),
                (0.125, 0.6875, 0, 1, 1, 0.125),
                (0.125, 0.6875, 0.875, 1, 1, 1),
                (0.875, 0.6875, 0.125, 1, 1, 0.875)
            ],
            [
                (0.25, 0.25, 0.25, 0.75, 0.6875, 0.75),
                (0.375, 0.25, 0.75, 0.625, 0.5, 1),
                (0, 0.625, 0, 0.25, 0.6875, 1),
                (0.25, 0.625, 0, 1, 0.6875, 0.25),
                (0.25, 0.625, 0.75, 1, 0.6875, 1),
                (0.75, 0.625, 0.25, 1, 0.6875, 0.75),
                (0, 0.6875, 0, 0.125, 1, 1),
                (0.125, 0.6875, 0, 1, 1, 0.125),
                (0.125, 0.6875, 0.875, 1, 1, 1),
                (0.875, 0.6875, 0.125, 1, 1, 0.875)
            ],
            [
                (0, 0.25, 0.375, 0.75, 0.5, 0.625),
                (0.25, 0.25, 0.25, 0.75, 0.6875, 0.375),
                (0.25, 0.25, 0.625, 0.75, 0.6875, 0.75),
                (0.25, 0.5, 0.375, 0.75, 0.6875, 0.625),
                (0, 0.625, 0, 0.25, 0.6875, 1),
                (0.25, 0.625, 0, 1, 0.6875, 0.25),
                (0.25, 0.625, 0.75, 1, 0.6875, 1),
                (0.75, 0.625, 0.25, 1, 0.6875, 0.75),
                (0, 0.6875, 0, 0.125, 1, 1),
                (0.125, 0.6875, 0, 1, 1, 0.125),
                (0.125, 0.6875, 0.875, 1, 1, 1),
                (0.875, 0.6875, 0.125, 1, 1, 0.875)
            ],
            [
                (0.25, 0.25, 0.25, 0.75, 0.6875, 0.75),
                (0.75, 0.25, 0.375, 1, 0.5, 0.625),
                (0, 0.625, 0, 0.25, 0.6875, 1),
                (0.25, 0.625, 0, 1, 0.6875, 0.25),
                (0.25, 0.625, 0.75, 1, 0.6875, 1),
                (0.75, 0.625, 0.25, 1, 0.6875, 0.75),
                (0, 0.6875, 0, 0.125, 1, 1),
                (0.125, 0.6875, 0, 1, 1, 0.125),
                (0.125, 0.6875, 0.875, 1, 1, 1),
                (0.875, 0.6875, 0.125, 1, 1, 0.875)
            ],
            [
                (0.375, 0, 0.375, 0.625, 0.6875, 0.625),
                (0.25, 0.25, 0.25, 0.375, 0.6875, 0.75),
                (0.375, 0.25, 0.25, 0.75, 0.6875, 0.375),
                (0.375, 0.25, 0.625, 0.75, 0.6875, 0.75),
                (0.625, 0.25, 0.375, 0.75, 0.6875, 0.625),
                (0, 0.625, 0, 0.25, 0.6875, 1),
                (0.25, 0.625, 0, 1, 0.6875, 0.25),
                (0.25, 0.625, 0.75, 1, 0.6875, 1),
                (0.75, 0.625, 0.25, 1, 0.6875, 0.75),
                (0, 0.6875, 0, 0.125, 1, 1),
                (0.125, 0.6875, 0, 1, 1, 0.125),
                (0.125, 0.6875, 0.875, 1, 1, 1),
                (0.875, 0.6875, 0.125, 1, 1, 0.875)
            ],
            [
                (0.25, 0.25, 0.25, 0.75, 0.6875, 0.75),
                (0.375, 0.25, 0, 0.625, 0.5, 0.25),
                (0, 0.625, 0, 0.25, 0.6875, 1),
                (0.25, 0.625, 0, 1, 0.6875, 0.25),
                (0.25, 0.625, 0.75, 1, 0.6875, 1),
                (0.75, 0.625, 0.25, 1, 0.6875, 0.75),
                (0, 0.6875, 0, 0.125, 1, 1),
                (0.125, 0.6875, 0, 1, 1, 0.125),
                (0.125, 0.6875, 0.875, 1, 1, 1),
                (0.875, 0.6875, 0.125, 1, 1, 0.875)
            ],
            [
                (0.25, 0.25, 0.25, 0.75, 0.6875, 0.75),
                (0.375, 0.25, 0.75, 0.625, 0.5, 1),
                (0, 0.625, 0, 0.25, 0.6875, 1),
                (0.25, 0.625, 0, 1, 0.6875, 0.25),
                (0.25, 0.625, 0.75, 1, 0.6875, 1),
                (0.75, 0.625, 0.25, 1, 0.6875, 0.75),
                (0, 0.6875, 0, 0.125, 1, 1),
                (0.125, 0.6875, 0, 1, 1, 0.125),
                (0.125, 0.6875, 0.875, 1, 1, 1),
                (0.875, 0.6875, 0.125, 1, 1, 0.875)
            ],
            [
                (0, 0.25, 0.375, 0.75, 0.5, 0.625),
                (0.25, 0.25, 0.25, 0.75, 0.6875, 0.375),
                (0.25, 0.25, 0.625, 0.75, 0.6875, 0.75),
                (0.25, 0.5, 0.375, 0.75, 0.6875, 0.625),
                (0, 0.625, 0, 0.25, 0.6875, 1),
                (0.25, 0.625, 0, 1, 0.6875, 0.25),
                (0.25, 0.625, 0.75, 1, 0.6875, 1),
                (0.75, 0.625, 0.25, 1, 0.6875, 0.75),
                (0, 0.6875, 0, 0.125, 1, 1),
                (0.125, 0.6875, 0, 1, 1, 0.125),
                (0.125, 0.6875, 0.875, 1, 1, 1),
                (0.875, 0.6875, 0.125, 1, 1, 0.875)
            ],
            [
                (0.25, 0.25, 0.25, 0.75, 0.6875, 0.75),
                (0.75, 0.25, 0.375, 1, 0.5, 0.625),
                (0, 0.625, 0, 0.25, 0.6875, 1),
                (0.25, 0.625, 0, 1, 0.6875, 0.25),
                (0.25, 0.625, 0.75, 1, 0.6875, 1),
                (0.75, 0.625, 0.25, 1, 0.6875, 0.75),
                (0, 0.6875, 0, 0.125, 1, 1),
                (0.125, 0.6875, 0, 1, 1, 0.125),
                (0.125, 0.6875, 0.875, 1, 1, 1),
                (0.875, 0.6875, 0.125, 1, 1, 0.875)
            ]
        ];
        public override int BlockId => 9225 + (int)Facing * 1 + (Enabled ? 0 : 5);
        public override int LiquidId => 0;
        public override int LightEmission => 0;
        public override int LightFilter => 0;
        public override (double xa, double ya, double za, double xb, double yb, double zb)[] Collisions => [.. InternalCollisions[BlockId - 9225]];
        public EnumFacing Facing = EnumFacing.Down;
        public bool Enabled = false;
        public BlockHopper()
        {
            
        }
        public override BlockHopper Clone()
        {
            return new()
            {
                Facing = Facing,
                Enabled = Enabled
            };
        }
        public override Block Break()
        {
            return new BlockAir();
        }
    }
}
